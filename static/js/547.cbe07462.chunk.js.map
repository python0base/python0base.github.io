{"version":3,"file":"static/js/547.cbe07462.chunk.js","mappings":"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","sources":["components/pagination/style.ts","components/pagination/index.tsx","views/discover/c-views/songs/c-cpns/songs-category/style.ts","views/discover/c-views/songs/c-cpns/songs-category/index.tsx","views/discover/c-views/songs/c-cpns/songs-header/style.ts","views/discover/c-views/songs/c-cpns/songs-header/index.tsx","components/theme-cover/style.ts","components/theme-cover/index.tsx","views/discover/c-views/songs/c-cpns/songs-list/style.ts","views/discover/c-views/songs/c-cpns/songs-list/index.tsx","views/discover/c-views/songs/style.ts","views/discover/c-views/songs/index.tsx"],"sourcesContent":["import styled from 'styled-components'\n\nexport const PaginationWrapper = styled.div`\n  .pagination {\n    margin: 30px 0;\n    text-align: center;\n\n    .control {\n      width: 69px;\n      height: 24px;\n      line-height: 22px;\n      text-align: center;\n      border: 1px solid #ccc;\n      border-radius: 2px;\n      margin: 0 5px;\n      color: #333;\n\n      &:disabled {\n        color: #999;\n      }\n    }\n\n    .ant-pagination-item {\n      border: 1px solid #ccc !important;\n      margin: 0 5px;\n      border-radius: 3px;\n\n      a {\n        font-size: 12px;\n      }\n\n      &.ant-pagination-item-active {\n        background-color: #c20c0c;\n        border-color: #a2161b;\n        a {\n          color: #fff;\n        }\n      }\n    }\n  }\n`\n","import React, { memo } from 'react'\n\nimport type { FC, ReactNode } from 'react'\n\nimport { Pagination } from 'antd'\nimport { PaginationWrapper } from './style'\n\ninterface IProps {\n  children?: ReactNode\n  currentPage: any\n  total: any\n  onPageChange: any\n  pageSize?: number\n}\n\nconst HYPagination: FC<IProps> = (props) => {\n  const { currentPage, total, onPageChange } = props\n\n  // render function\n  function itemRender(current: any, type: any, originalElement: any) {\n    if (type === 'prev') {\n      return <button className=\"control prev\"> &lt; 上一页</button>\n    }\n    if (type === 'next') {\n      return <button className=\"control next\">上一页 &gt;</button>\n    }\n    return originalElement\n  }\n\n  return (\n    <PaginationWrapper>\n      <Pagination\n        className=\"pagination\"\n        size=\"small\"\n        current={currentPage}\n        defaultCurrent={1}\n        total={total}\n        pageSize={35}\n        showSizeChanger={false}\n        itemRender={itemRender}\n        onChange={onPageChange}\n      />\n    </PaginationWrapper>\n  )\n}\nexport default memo(HYPagination)\n","import styled from 'styled-components'\n\nexport const CategoryWrapper = styled.div`\n  position: absolute;\n  z-index: 99;\n  top: 55px;\n  left: -25px;\n  width: 700px;\n  border: 1px solid #ccc;\n  background-color: #fefefe;\n  box-shadow: 0 0 10px 2px #d3d3d3;\n  border-radius: 5px;\n  padding-top: 10px;\n\n  .arrow {\n    position: absolute;\n    top: -11px;\n    left: 110px;\n    width: 24px;\n    height: 11px;\n    background-position: -48px 0;\n  }\n\n  .all {\n    padding: 10px 25px;\n    border-bottom: 1px solid #e2e2e2;\n    a {\n      display: inline-block;\n      text-align: center;\n      width: 75px;\n      height: 26px;\n      line-height: 26px;\n      border: 1px solid #d3d3d3;\n      border-radius: 3px;\n      background-color: #fafafa;\n    }\n  }\n\n  .category {\n    padding-left: 25px;\n    dl {\n      display: flex;\n      align-items: flex-start;\n    }\n\n    dt {\n      display: inline-flex;\n      align-items: center;\n      padding: 15px 0 10px;\n      width: 70px;\n      text-align: center;\n\n      i {\n        display: inline-block;\n        width: 24px;\n        height: 24px;\n        background-position: -20px -735px;\n        margin-right: 8px;\n      }\n    }\n\n    dl.item1 {\n      i {\n        background-position: 0 -60px;\n      }\n    }\n\n    dl.item2 {\n      i {\n        background-position: 0 -88px;\n      }\n    }\n\n    dl.item3 {\n      i {\n        background-position: 0 -117px;\n      }\n    }\n\n    dl.item4 {\n      i {\n        background-position: 0 -141px;\n      }\n\n      dd {\n        padding-bottom: 25px;\n      }\n    }\n\n    dd {\n      padding-top: 18px;\n      padding-left: 15px;\n      flex: 1;\n      display: flex;\n      flex-wrap: wrap;\n      border-left: 1px solid #e2e2e2;\n\n      .item {\n        margin-bottom: 8px;\n      }\n\n      a {\n        color: #333;\n      }\n\n      .divider {\n        margin: 0 12px;\n        color: #e2e2e2;\n      }\n    }\n  }\n`\n","import React, { memo } from 'react'\nimport { shallowEqualApp, useAppDispatch, useAppSelector } from '@/store'\n\nimport { changeCurrentCategoryAction, getSongList } from '../../store/songs'\n\nimport { CategoryWrapper } from './style'\n\nexport default memo(function HYSongsCategory() {\n  // redux\n  const { category } = useAppSelector(\n    (state) => ({\n      category: state.songs.category\n    }),\n    shallowEqualApp\n  )\n  const dispatch = useAppDispatch()\n\n  function selectCategory(name: any) {\n    dispatch(changeCurrentCategoryAction(name))\n    dispatch(getSongList(0))\n  }\n  interface item {\n    name: any\n    subs: any[]\n  }\n\n  return (\n    <CategoryWrapper>\n      <div className=\"arrow sprite_icon\"></div>\n      <div className=\"all\">\n        <span className=\"link\" onClick={() => selectCategory('全部')}>\n          全部风格\n        </span>\n      </div>\n      <div className=\"category\">\n        {category.map((item: item, index) => {\n          return (\n            <dl key={item.name} className={'item' + index}>\n              <dt>\n                <i className=\"icon sprite_icon2\"></i>\n                <span>{item.name}</span>\n              </dt>\n              <dd>\n                {item.subs.map((sItem) => {\n                  return (\n                    <div className=\"item\" key={sItem.name}>\n                      <span\n                        className=\"link\"\n                        onClick={() => selectCategory(sItem.name)}\n                      >\n                        {sItem.name}\n                      </span>\n                      <span className=\"divider\">|</span>\n                    </div>\n                  )\n                })}\n              </dd>\n            </dl>\n          )\n        })}\n      </div>\n    </CategoryWrapper>\n  )\n})\n","import styled from 'styled-components'\n\nexport const HeaderWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-bottom: 2px solid #c20c0c;\n  padding-bottom: 6px;\n`\n\nexport const HeaderLeft = styled.div`\n  display: flex;\n  align-items: center;\n  position: relative;\n  .title {\n    font-size: 24px;\n    font-family: 'Microsoft Yahei', Arial, Helvetica, sans-serif;\n  }\n\n  .select {\n    position: relative;\n    top: 2px;\n    width: 91px;\n    height: 31px;\n    line-height: 31px;\n    background-color: #fafafa;\n    border: 1px solid #d3d3d3;\n    border-radius: 3px;\n    color: #0c73c2;\n    margin-left: 10px;\n    cursor: pointer;\n    &:hover {\n      background-color: #fff;\n    }\n\n    i {\n      position: relative;\n      left: 5px;\n      bottom: 2px;\n      display: inline-block;\n      width: 8px;\n      height: 5px;\n      background-position: -70px -543px;\n    }\n  }\n\n  .show {\n    /* display: block !important; */\n  }\n\n  .category {\n    display: block;\n    .cover {\n      position: fixed;\n      left: 0;\n      right: 0;\n      top: 105px;\n      bottom: 0;\n      background-color: rgba(0, 0, 0, 0.05);\n    }\n  }\n`\n\nexport const HeaderRight = styled.div`\n  .hot {\n    width: 46px;\n    height: 29px;\n    background-color: #c20c0c;\n    color: #fff;\n    border-radius: 3px;\n    border: 1px solid #aaa;\n  }\n`\n","import React, { useState, memo } from 'react'\nimport { shallowEqualApp, useAppDispatch, useAppSelector } from '@/store'\n\nimport HYSongsCategory from '../songs-category'\nimport { HeaderWrapper, HeaderLeft, HeaderRight } from './style'\n\nexport default memo(function HYSongsHeader() {\n  // hooks\n  const [showCategory, setShowCategory] = useState(false)\n\n  // redux\n  const { currentCategory } = useAppSelector(\n    (state) => ({\n      currentCategory: state.songs.currentCategory\n    }),\n    shallowEqualApp\n  )\n\n  return (\n    <HeaderWrapper>\n      <HeaderLeft>\n        <span className=\"title\">{currentCategory.toString()}</span>\n        <button\n          className=\"select\"\n          onClick={() => setShowCategory(!showCategory)}\n        >\n          <span>选择分类</span>\n          <i className=\"sprite_icon2\"></i>\n        </button>\n        {showCategory ? <HYSongsCategory /> : null}\n      </HeaderLeft>\n      <HeaderRight>\n        <button className=\"hot\">热门</button>\n      </HeaderRight>\n    </HeaderWrapper>\n  )\n})\n","import styled from 'styled-components'\ninterface a {\n  right: any\n}\nexport const ThemeCoverWrapper = styled.div<a>`\n  width: 140px;\n  margin: 20px ${(props) => props.right || 0} 20px 0;\n\n  .cover-top {\n    position: relative;\n\n    & > img {\n      width: 140px;\n      height: 140px;\n    }\n\n    .cover {\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background-position: 0 0;\n\n      .info {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        padding: 0 10px;\n        position: absolute;\n        bottom: 0;\n        left: 0;\n        right: 0;\n        background-position: 0 -537px;\n        color: #ccc;\n        height: 27px;\n\n        .erji {\n          margin-right: 5px;\n          display: inline-block;\n          width: 14px;\n          height: 11px;\n          background-position: 0 -24px;\n        }\n\n        .play {\n          display: inline-block;\n          width: 16px;\n          height: 17px;\n          background-position: 0 0;\n        }\n      }\n    }\n  }\n\n  .cover-bottom {\n    font-size: 14px;\n    color: #000;\n    margin-top: 5px;\n  }\n\n  .cover-source {\n    color: #666;\n  }\n`\n","import React, { memo } from 'react'\nimport type { FC, ReactNode } from 'react'\n\nimport { getImageSize, formatCount } from '@/utils/format'\n\nimport { ThemeCoverWrapper } from './style'\n\ninterface IProps {\n  children?: ReactNode\n  right: any\n  info: any\n}\n\nconst HYThemeCover: FC<IProps> = (props) => {\n  const { info, right } = props\n\n  return (\n    <ThemeCoverWrapper right={right}>\n      <div className=\"cover-top\">\n        <img src={getImageSize(info.picUrl || info.coverImgUrl, 140)} alt=\"\" />\n        <div className=\"cover sprite_covor\">\n          <div className=\"info sprite_covor\">\n            <span>\n              <i className=\"sprite_icon erji\"></i>\n              {formatCount(info.playCount)}\n            </span>\n            <i className=\"sprite_icon play\"></i>\n          </div>\n        </div>\n      </div>\n      <div className=\"cover-bottom text-nowrap\">{info.name}</div>\n      {/* <div className=\"cover-source\">\n        by {info.copywriter || info.creator.nickname}\n      </div> */}\n    </ThemeCoverWrapper>\n  )\n}\n\nexport default memo(HYThemeCover)\n","import styled from 'styled-components'\n\nexport const SongListWrapper = styled.div`\n  .songs-list {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    margin-right: -30px;\n  }\n`\n","import React, { useState, memo } from 'react'\nimport { shallowEqualApp, useAppDispatch, useAppSelector } from '@/store'\n\nimport { PER_PAGE_NUMBER } from '../../store/constants'\nimport { getSongList } from '../../store/songs'\n\nimport HYThemeCover from '@/components/theme-cover'\nimport HYPagination from '@/components/pagination'\nimport { SongListWrapper } from './style'\n\nexport default memo(function HYSongsList() {\n  // hooks\n  const [currentPage, setCurrentPage] = useState(1)\n\n  // redux\n  const { categorySongs } = useAppSelector(\n    (state) => ({\n      categorySongs: state.songs.categorySongs\n    }),\n    shallowEqualApp\n  )\n  const songList: any[] = categorySongs.playlists || []\n  const total = categorySongs.total || 0\n  const dispatch = useAppDispatch()\n\n  function onPageChange(page: any, pageSize: any) {\n    setCurrentPage(page)\n    dispatch(getSongList(page))\n  }\n\n  return (\n    <SongListWrapper>\n      <div className=\"songs-list\">\n        {songList.map((item, index) => {\n          return <HYThemeCover info={item} key={item.id} right=\"30px\" />\n        })}\n      </div>\n      <HYPagination\n        currentPage={currentPage}\n        total={total}\n        pageSize={PER_PAGE_NUMBER}\n        onPageChange={onPageChange}\n      />\n    </SongListWrapper>\n  )\n})\n","import styled from 'styled-components'\n\nexport const SongsWrapper = styled.div`\n  padding: 40px;\n  border: 1px solid #d3d3d3;\n  border-width: 0 1px;\n  background-color: #fff;\n`\n","import React, { memo, useEffect } from 'react'\nimport type { FC, ReactNode } from 'react'\nimport { shallowEqualApp, useAppDispatch, useAppSelector } from '@/store'\n\nimport { useLocation } from 'react-router-dom'\n\nimport {\n  getCategory,\n  getSongList,\n  changeCurrentCategoryAction\n} from './store/songs'\n\nimport HYSongsHeader from './c-cpns/songs-header'\nimport HYSongsList from './c-cpns/songs-list'\nimport { SongsWrapper } from './style'\n\ninterface IProps {\n  children?: ReactNode\n}\n\nconst Songs: FC<IProps> = () => {\n  // redux\n  const dispatch = useAppDispatch()\n  // const cat = useLocation()\n\n  // useEffect(() => {\n  //   dispatch(changeCurrentCategoryAction(cat))\n  // }, [dispatch, cat])\n\n  // hooks\n  useEffect(() => {\n    dispatch(getCategory())\n    dispatch(getSongList(0))\n  }, [dispatch])\n\n  return (\n    <SongsWrapper className=\"wrap-v2\">\n      <HYSongsHeader />\n      <HYSongsList />\n    </SongsWrapper>\n  )\n}\n\nexport default memo(Songs)\n"],"names":["PaginationWrapper","styled","HYPagination","props","currentPage","total","onPageChange","className","size","current","defaultCurrent","pageSize","showSizeChanger","itemRender","type","originalElement","onChange","memo","CategoryWrapper","category","useAppSelector","state","songs","shallowEqualApp","dispatch","useAppDispatch","selectCategory","name","changeCurrentCategoryAction","getSongList","onClick","map","item","index","subs","sItem","HeaderWrapper","HeaderLeft","HeaderRight","useState","showCategory","setShowCategory","currentCategory","toString","ThemeCoverWrapper","right","HYThemeCover","info","src","getImageSize","picUrl","coverImgUrl","alt","formatCount","playCount","SongListWrapper","setCurrentPage","categorySongs","songList","playlists","id","PER_PAGE_NUMBER","page","SongsWrapper","Songs","useEffect","getCategory"],"sourceRoot":""}