{"version":3,"file":"static/js/56.3e54e835.chunk.js","mappings":"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","sources":["components/theme-header-normal/style.ts","components/theme-header-normal/index.tsx","views/discover/c-views/artist/c-cpns/artist-category/style.ts","views/discover/c-views/artist/c-cpns/artist-category/index.tsx","views/discover/c-views/artist/c-cpns/artist-list/c-cpns/alpha-list/style.ts","views/discover/c-views/artist/c-cpns/artist-list/c-cpns/alpha-list/index.tsx","views/discover/c-views/artist/c-cpns/artist-list/c-cpns/artist-item/style.ts","views/discover/c-views/artist/c-cpns/artist-list/c-cpns/artist-item/index.tsx","views/discover/c-views/artist/c-cpns/artist-list/style.ts","views/discover/c-views/artist/c-cpns/artist-list/index.tsx","views/discover/c-views/artist/style.ts","views/discover/c-views/artist/index.tsx"],"sourcesContent":["import styled from 'styled-components'\n\nexport const HeaderWrapper = styled.div`\n  display: flex;\n  padding-bottom: 5px;\n  border-bottom: 2px solid #c20c0c;\n  font-family: 'Microsoft Yahei', Arial, Helvetica, sans-serif;\n  font-size: 24px;\n`\n","import React, { memo } from 'react'\nimport type { FC, ReactNode } from 'react'\n\nimport { HeaderWrapper } from './style'\n\ninterface IProps {\n  children?: ReactNode\n  title: any\n  rightSlot: any\n}\n\nconst HYThemeHeaderNormal: FC<IProps> = (props) => {\n  const { title, rightSlot } = props\n\n  return (\n    <HeaderWrapper>\n      <div className=\"title\">{title}</div>\n      <div className=\"right\">{rightSlot}</div>\n    </HeaderWrapper>\n  )\n}\n\nexport default memo(HYThemeHeaderNormal)\n","import styled from 'styled-components'\n\nexport const CategoryWrapper = styled.div`\n  width: 180px;\n  padding: 50px 10px 40px;\n  border: 1px solid #d3d3d3;\n  border-width: 0 1px;\n\n  background-color: #fafafa;\n\n  .section {\n    border-bottom: 1px solid #d3d3d3;\n    padding: 10px 0;\n\n    &:last-of-type {\n      border-bottom: none;\n    }\n\n    .title {\n      height: 25px;\n      padding-left: 14px;\n      font-size: 16px;\n      margin-bottom: 5px;\n      font-family: 'Microsoft Yahei';\n    }\n  }\n`\n\nexport const CategoryItem = styled.div`\n  width: 160px;\n  color: #333;\n  height: 29px;\n  line-height: 29px;\n  margin-bottom: 2px;\n  cursor: pointer;\n\n  &.active {\n    span {\n      color: red;\n      background-position: 0 0;\n    }\n  }\n\n  span {\n    display: inline-block;\n    width: 160px;\n    padding-left: 27px;\n    background: url(${require('@/assets/img/singer_sprite.png')}) no-repeat 0 -30px;\n    cursor: pointer;\n\n    &:hover {\n      text-decoration: underline;\n    }\n`\n","import React, { memo } from 'react'\nimport type { FC, ReactNode } from 'react'\nimport { shallowEqualApp, useAppDispatch, useAppSelector } from '@/store'\nimport classNames from 'classnames'\n\nimport { artistCategories } from '@/assets/data/local_data'\n\nimport { CategoryWrapper, CategoryItem } from './style'\nimport {\n  changeCurrentAreaAction,\n  changeCurrentTypeAction\n} from '../../store/artist'\n\ninterface IProps {\n  children?: ReactNode\n}\n\nconst HYArtistCategory: FC<IProps> = () => {\n  // redux hooks\n  const { currentArea, currentType } = useAppSelector(\n    (state) => ({\n      currentArea: state.artist.currentArea,\n      currentType: state.artist.currentType\n    }),\n    shallowEqualApp\n  )\n  const dispatch = useAppDispatch()\n\n  // handle function\n  const selectArtist = (area: any, type: any) => {\n    dispatch(changeCurrentAreaAction(area))\n    dispatch(changeCurrentTypeAction(type))\n  }\n\n  // render jsx\n  const renderArtist = (artists: any[], area: number) => {\n    return (\n      <div>\n        {artists.map((item) => {\n          const isSelect =\n            currentArea === area && currentType.type === item.type\n          return (\n            <CategoryItem\n              key={item.name}\n              className={classNames({ active: isSelect })}\n            >\n              <span onClick={() => selectArtist(area, item)}>{item.name}</span>\n            </CategoryItem>\n          )\n        })}\n      </div>\n    )\n  }\n\n  return (\n    <CategoryWrapper>\n      {artistCategories.map((item, index) => {\n        return (\n          <div className=\"section\" key={item.area}>\n            <h2 className=\"title\">{item.title}</h2>\n            {renderArtist(item.artists, item.area)}\n          </div>\n        )\n      })}\n    </CategoryWrapper>\n  )\n}\n\nexport default memo(HYArtistCategory)\n","import styled from 'styled-components'\n\ninterface ha {\n  hasTop: any\n}\nexport const AlphaListWrapper = styled.div<ha>`\n  display: flex;\n  justify-content: space-between;\n  margin-top: ${(props) => (props.hasTop ? '20px' : 0)};\n\n  .item {\n    padding: 1px 4px;\n    border-radius: 3px;\n    span {\n      font-size: 14px;\n      color: #333;\n      cursor: pointer;\n    }\n\n    span:hover {\n      text-decoration: underline;\n    }\n  }\n\n  .active {\n    background-color: #c20c0c;\n    span {\n      color: #fff;\n    }\n  }\n`\n","import React, { memo, useState, useEffect } from 'react'\nimport type { FC, ReactNode } from 'react'\n\nimport { shallowEqualApp, useAppDispatch, useAppSelector } from '@/store'\nimport classNames from 'classnames'\n\nimport { singerAlphas } from '@/utils/handle-data'\nimport { getArtistListAction } from '../../../../store/artist'\n\nimport { AlphaListWrapper } from './style'\n\ninterface IProps {\n  children?: ReactNode\n}\n\nconst HYAlphaList: FC<IProps> = () => {\n  const [currentAlpha, setCurrentAlpha] = useState('-1')\n\n  const { currentType, currentArea } = useAppSelector(\n    (state) => ({\n      currentType: state.artist.currentType,\n      currentArea: state.artist.currentArea\n    }),\n    shallowEqualApp\n  )\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    setCurrentAlpha('-1')\n  }, [currentType, currentArea])\n\n  useEffect(() => {\n    dispatch(\n      getArtistListAction({\n        area: currentArea,\n        type: currentType.type,\n        alpha: currentAlpha\n      })\n    )\n  }, [currentAlpha, currentType, currentArea, dispatch])\n\n  return (\n    <AlphaListWrapper hasTop={currentArea !== -1}>\n      {currentArea !== -1 &&\n        singerAlphas.map((item) => {\n          const isActive = currentAlpha === item\n          if (item === '0') item = '其他'\n          if (item === '-1') item = '热门'\n          return (\n            <div\n              key={item}\n              className={classNames('item', { active: isActive })}\n            >\n              <span onClick={() => setCurrentAlpha(item)}>\n                {item.toUpperCase()}\n              </span>\n            </div>\n          )\n        })}\n    </AlphaListWrapper>\n  )\n}\n\nexport default memo(HYAlphaList)\n","import styled from 'styled-components'\n\nexport const ItemWrapper = styled.div`\n  width: 130px;\n  margin-top: 15px;\n\n  .image {\n    img {\n      width: 130px;\n      height: 130px;\n    }\n  }\n\n  .info {\n    margin: 10px 0;\n    display: flex;\n    justify-content: space-between;\n\n    .name {\n      cursor: pointer;\n\n      &:hover {\n        color: red;\n        text-decoration: underline;\n      }\n    }\n\n    .icon {\n      display: inline-block;\n      width: 17px;\n      height: 18px;\n      background-position: 0 -740px;\n    }\n  }\n`\n","import React, { memo } from 'react'\nimport type { FC, ReactNode } from 'react'\n\nimport { getImageSize } from '@/utils/format'\n\nimport { ItemWrapper } from './style'\n\ninterface IProps {\n  children?: ReactNode\n  info: any\n  index: any\n}\n\nconst HYArtistItemV1: FC<IProps> = (props) => {\n  const { info, index } = props\n\n  return (\n    <ItemWrapper>\n      {index < 10 && (\n        <div className=\"image\">\n          <img src={getImageSize(info.img1v1Url, 130)} alt=\"\" />\n        </div>\n      )}\n      <div className=\"info\">\n        <span className=\"name\">{info.name}</span>\n        <i className=\"sprite_icon2 icon\"></i>\n      </div>\n    </ItemWrapper>\n  )\n}\n\nexport default memo(HYArtistItemV1)\n","import styled from 'styled-components'\n\nexport const ArtistListWrapper = styled.div`\n  flex: 1;\n  padding: 40px;\n\n  .artist-list {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n\n    padding: 5px 0 40px;\n  }\n`\n","import React, { memo } from 'react'\nimport type { FC, ReactNode } from 'react'\n\nimport { shallowEqualApp, useAppDispatch, useAppSelector } from '@/store'\n\nimport HYThemeHeaderNormal from '@/components/theme-header-normal'\nimport HYAlphaList from './c-cpns/alpha-list'\nimport HYArtistItem from './c-cpns/artist-item'\nimport { ArtistListWrapper } from './style'\n\ninterface IProps {\n  children?: ReactNode\n}\n\nconst HYArtistList: FC<IProps> = () => {\n  // redux hooks\n  const { currentType, artistList } = useAppSelector(\n    (state) => ({\n      currentType: state.artist.currentType,\n      artistList: state.artist.artistList\n    }),\n    shallowEqualApp\n  )\n\n  return (\n    <ArtistListWrapper>\n      <HYThemeHeaderNormal title={currentType.name} rightSlot={undefined} />\n      <HYAlphaList />\n      <div className=\"artist-list\">\n        {artistList.map((item, index) => {\n          return <HYArtistItem key={item.id} index={index} info={item} />\n        })}\n      </div>\n    </ArtistListWrapper>\n  )\n}\n\nexport default memo(HYArtistList)\n","import styled from 'styled-components'\n\nexport const HYArtistWrapper = styled.div`\n  .content {\n    display: flex;\n    background-color: #fff;\n  }\n`\n","import React, { memo } from 'react'\nimport type { FC, ReactNode } from 'react'\n\nimport HYArtistCategory from './c-cpns/artist-category'\nimport HYArtistList from './c-cpns/artist-list'\nimport { HYArtistWrapper } from './style'\n\ninterface IProps {\n  children?: ReactNode\n}\n\nconst Artist: FC<IProps> = () => (\n  <HYArtistWrapper>\n    <div className=\"content wrap-v2\">\n      <HYArtistCategory />\n      <HYArtistList />\n    </div>\n  </HYArtistWrapper>\n)\n\nexport default memo(Artist)\n"],"names":["HeaderWrapper","styled","HYThemeHeaderNormal","props","title","rightSlot","className","memo","CategoryWrapper","CategoryItem","require","HYArtistCategory","useAppSelector","state","currentArea","artist","currentType","shallowEqualApp","dispatch","useAppDispatch","renderArtist","artists","area","map","item","isSelect","type","classNames","active","onClick","changeCurrentAreaAction","changeCurrentTypeAction","selectArtist","name","artistCategories","index","AlphaListWrapper","hasTop","HYAlphaList","useState","currentAlpha","setCurrentAlpha","useEffect","getArtistListAction","alpha","singerAlphas","isActive","toUpperCase","ItemWrapper","HYArtistItemV1","info","src","getImageSize","img1v1Url","alt","ArtistListWrapper","HYArtistList","artistList","undefined","id","HYArtistWrapper","Artist"],"sourceRoot":""}