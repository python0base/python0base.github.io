{"version":3,"file":"static/js/319.b8529803.chunk.js","mappings":"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","sources":["components/song-operation-bar/style.ts","components/song-operation-bar/index.tsx","views/player/style.ts","views/player/c-cpns/player-info/style.ts","views/player/c-cpns/player-info/index.tsx","views/player/c-cpns/player-comment/index.tsx","components/theme-header-player/style.ts","components/theme-header-player/index.tsx","views/player/c-cpns/player-songs/style.ts","views/player/c-cpns/player-songs/index.tsx","views/player/c-cpns/player-relevant/style.ts","views/player/c-cpns/player-relevant/index.tsx","views/player/index.tsx"],"sourcesContent":["import styled from 'styled-components'\n\nexport const OperationBarWrapper = styled.div`\n  display: flex;\n  align-items: center;\n\n  .play {\n    display: flex;\n    align-items: center;\n    margin-right: 5px;\n\n    .play-icon {\n      display: inline-block;\n      height: 31px;\n      line-height: 31px;\n      background-position: right -428px;\n\n      .play {\n        color: #fff;\n        display: flex;\n        align-items: center;\n        padding: 0 7px 0 8px;\n        background-position: 0 -387px;\n\n        i {\n          display: inline-block;\n          width: 20px;\n          height: 18px;\n          margin: -2px 2px 0;\n          background-position: 0 -1622px;\n        }\n      }\n      :hover {\n        background-position: right -510px;\n      }\n    }\n\n    .add-icon {\n      display: inline-block;\n      width: 31px;\n      height: 31px;\n      margin-left: -3px;\n      padding-right: 0;\n      background-position: 0 -1588px;\n      text-indent: -9999px;\n    }\n  }\n\n  .item {\n    display: inline-block;\n    height: 31px;\n    margin-right: 6px;\n    padding-right: 5px;\n    background-position: right -1020px;\n    .icon {\n      display: inline-block;\n      height: 31px;\n      line-height: 31px;\n      padding: 0 7px 0 28px;\n      font-family: simsun;\n    }\n\n    .favor-icon {\n      background-position: 0 -977px;\n    }\n\n    .share-icon {\n      background-position: 0 -1225px;\n    }\n\n    .download-icon {\n      background-position: 0 -2761px;\n    }\n\n    .comment-icon {\n      background-position: 0 -1465px;\n    }\n  }\n`\n","import React, { memo } from 'react'\nimport type { FC, ReactNode } from 'react'\nimport { OperationBarWrapper } from './style'\nimport { useAppDispatch } from '@/store'\nimport { fetchCurrentSongAction } from '@/views/player/store/player'\n\ninterface IProps {\n  children?: ReactNode\n  favorTitle: any\n  shareTitle: any\n  downloadTitle: any\n  commentTitle: any\n  id: number\n}\n\nconst HYSongOperationBar: FC<IProps> = (props) => {\n  const { favorTitle, shareTitle, downloadTitle, commentTitle, id } = props\n  // const { currentSong } = useAppSelector(\n  //   (state) => ({\n  //     currentSong: state.player.currentSong\n  //   }),\n  //   shallowEqualApp\n  // )\n  const dispatch = useAppDispatch()\n\n  function play() {\n    dispatch(fetchCurrentSongAction(id))\n  }\n  return (\n    <OperationBarWrapper>\n      <span className=\"play\">\n        <a className=\"play-icon sprite_button\" onClick={() => play()}>\n          <span className=\"play sprite_button\">\n            <i className=\"sprite_button\"></i>\n            <span>播放</span>\n          </span>\n        </a>\n        <a href=\"/abc\" className=\"add-icon sprite_button\">\n          +\n        </a>\n      </span>\n      <a href=\"/abc\" className=\"item sprite_button\">\n        <i className=\"icon favor-icon sprite_button\">{favorTitle}</i>\n      </a>\n      <a href=\"/abc\" className=\"item sprite_button\">\n        <i className=\"icon share-icon sprite_button\">{shareTitle}</i>\n      </a>\n      <a href=\"/abc\" className=\"item sprite_button\">\n        <i className=\"icon download-icon sprite_button\">{downloadTitle}</i>\n      </a>\n      <a href=\"/abc\" className=\"item sprite_button\">\n        <i className=\"icon comment-icon sprite_button\">{commentTitle}</i>\n      </a>\n    </OperationBarWrapper>\n  )\n}\n\nexport default memo(HYSongOperationBar)\n","import styled from 'styled-components'\n\nexport const PlayerWrapper = styled.div`\n  .content {\n    background: url(${require('@/assets/img/wrap-bg.png')}) repeat-y;\n    background-color: #fff;\n    display: flex;\n  }\n`\n\nexport const PlayerLeft = styled.div`\n  width: 710px;\n`\n\nexport const PlayerRight = styled.div`\n  width: 270px;\n  padding: 20px 40px 40px 30px;\n`\n","import styled from 'styled-components'\n\nexport const InfoWrapper = styled.div`\n  display: flex;\n  padding: 47px 30px 40px 39px;\n`\n\nexport const InfoLeft = styled.div`\n  width: 206px;\n\n  .image {\n    display: flex;\n    position: relative;\n    justify-content: center;\n    align-items: center;\n    width: 198px;\n    height: 198px;\n\n    .cover {\n      background-position: -140px -580px;\n      width: 206px;\n      height: 205px;\n      top: -4px;\n      left: -4px;\n    }\n  }\n\n  .link {\n    margin: 20px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    i {\n      display: inline-block;\n      width: 16px;\n      height: 16px;\n      background-position: -34px -863px;\n    }\n\n    a {\n      color: #0c73c2;\n      text-decoration: underline;\n    }\n  }\n`\ninterface right {\n  isSpread: any\n}\nexport const InfoRight = styled.div<right>`\n  width: 414px;\n  margin-left: 20px;\n\n  .header {\n    display: flex;\n    align-items: center;\n    i {\n      display: inline-block;\n      width: 54px;\n      height: 24px;\n      background-position: 0 -463px;\n    }\n\n    .title {\n      font-size: 24px;\n      font-weight: 400;\n      margin-left: 10px;\n    }\n  }\n\n  .singer,\n  .album {\n    margin: 10px;\n\n    a {\n      color: #0c73c2;\n    }\n  }\n\n  .lyric {\n    padding: 30px 0 50px;\n\n    .lyric-info {\n      .text {\n        margin: 6px 0;\n      }\n    }\n\n    .lyric-control {\n      position: relative;\n      color: #0c73c2;\n      background-color: #fff;\n      text-decoration: underline;\n      cursor: pointer;\n\n      i {\n        position: absolute;\n        width: 11px;\n        height: 8px;\n        right: -8px;\n        top: 2px;\n        background-position: ${(props) => (props.isSpread ? '-45px' : '-65px')} -520px;\n      }\n    }\n  }\n`\n","import React, { memo, useEffect, useState } from 'react'\nimport type { FC, ReactNode } from 'react'\nimport { shallowEqualApp, useAppDispatch, useAppSelector } from '@/store'\n\nimport * as formatUtils from '@/utils/format'\n\nimport HYSongOperationBar from '@/components/song-operation-bar'\nimport { InfoWrapper, InfoLeft, InfoRight } from './style'\nimport { useLocation } from 'react-router-dom'\nimport { getDetailSongAction } from '../../store/player'\n\ninterface IProps {\n  children?: ReactNode\n  id?: number\n}\n\nconst HYPlayerInfo: FC<IProps> = () => {\n  // props and hooks\n  // const { id } = props\n  const [isSpread, setIsSpread] = useState(false)\n  const location = useLocation()\n  const dispatch = useAppDispatch()\n  // redux hooks\n  const { currentLyrics } = useAppSelector(\n    (state) => ({\n      // currentSong: state.player.currentSongD,\n      currentLyrics: state.player.lyricsD\n    }),\n    shallowEqualApp\n  )\n\n  // handle code\n  const totalLyricCount = isSpread ? currentLyrics.length : 13\n\n  useEffect(() => {\n    dispatch(getDetailSongAction(location.state.currentSong.id))\n    console.log('info')\n  }, [dispatch])\n  const currentSong = location.state.currentSong\n  return (\n    <InfoWrapper>\n      <InfoLeft>\n        <div className=\"image\">\n          <img\n            src={formatUtils.getImageSize(currentSong.al.picUrl, 130)}\n            alt=\"\"\n          />\n          <span className=\"cover image_cover\"></span>\n        </div>\n        <div className=\"link\">\n          <i className=\"sprite_icon2\"></i>\n          <a href=\"#/\">生成外联播放器</a>\n        </div>\n      </InfoLeft>\n      <InfoRight isSpread={isSpread}>\n        <div className=\"header\">\n          <i className=\"sprite_icon2\"></i>\n          <h3 className=\"title\">{currentSong.name}</h3>\n        </div>\n        <div className=\"singer\">\n          <span className=\"label\">歌手：</span>\n          <a href=\"/#\" className=\"name\">\n            {currentSong.ar[0].name}\n          </a>\n        </div>\n        <div className=\"album\">\n          <span className=\"label\">所属专辑：</span>\n          <a href=\"/#\" className=\"name\">\n            {currentSong.al.name}\n          </a>\n        </div>\n\n        <HYSongOperationBar\n          favorTitle=\"收藏\"\n          shareTitle=\"分享\"\n          downloadTitle=\"下载\"\n          commentTitle=\"(167366)\"\n          id={currentSong.id}\n        />\n\n        <div className=\"lyric\">\n          <div className=\"lyric-info\">\n            {currentLyrics.slice(0, totalLyricCount).map((item) => {\n              return (\n                <p key={item.time} className=\"text\">\n                  {item.text}\n                </p>\n              )\n            })}\n          </div>\n          <button\n            className=\"lyric-control\"\n            onClick={() => setIsSpread(!isSpread)}\n          >\n            {isSpread ? '收起' : '展开'}\n            <i className=\"sprite_icon2\"></i>\n          </button>\n        </div>\n      </InfoRight>\n    </InfoWrapper>\n  )\n}\n\nexport default memo(HYPlayerInfo)\n","import React, { memo } from 'react'\nimport type { FC, ReactNode } from 'react'\n\ninterface IProps {\n  children?: ReactNode\n}\n\nconst HYPlayerComment: FC<IProps> = () => {\n  return <div>HYPlayerComment</div>\n}\n\nexport default memo(HYPlayerComment)\n","import styled from 'styled-components'\n\nexport const HeaderWrapper = styled.div`\n  h3 {\n    height: 23px;\n    margin-bottom: 20px;\n    border-bottom: 1px solid #ccc;\n    font-size: 12px;\n    font-weight: 700;\n    color: #333;\n  }\n`\n","import React, { memo } from 'react'\n\nimport type { FC, ReactNode } from 'react'\nimport { HeaderWrapper } from './style'\ninterface IProps {\n  children?: ReactNode\n  title: any\n}\n\nconst HYThemeHeaderPlayer: FC<IProps> = (props) => {\n  const { title } = props\n\n  return (\n    <HeaderWrapper>\n      <h3>{title}</h3>\n    </HeaderWrapper>\n  )\n}\n\nexport default memo(HYThemeHeaderPlayer)\n","import styled from 'styled-components'\n\nexport const PlayerSongsWrapper = styled.div`\n  .songs {\n    .song-item {\n      display: flex;\n      align-items: center;\n      margin-top: 15px;\n      width: 200px;\n\n      .image {\n        width: 50px;\n        height: 50px;\n      }\n\n      .info {\n        margin-left: 10px;\n        .name {\n          font-size: 14px;\n          color: #000;\n        }\n\n        .auchor {\n          color: #999;\n\n          .nickname {\n            color: #666;\n            margin-left: 5px;\n          }\n        }\n      }\n    }\n  }\n`\n","import React, { memo, useEffect } from 'react'\nimport type { FC, ReactNode } from 'react'\nimport { shallowEqualApp, useAppSelector, useAppDispatch } from '@/store'\nimport { getImageSize } from '@/utils/format'\n\nimport HYThemeHeaderPlayer from '@/components/theme-header-player'\nimport { PlayerSongsWrapper } from './style'\nimport { getSimiSongAction } from '../../store/player'\nimport { useLocation } from 'react-router-dom'\n\ninterface IProps {\n  children?: ReactNode\n  id?: number\n}\n\nconst HYPlayerSongs: FC<IProps> = () => {\n  // const { id } = props\n  // redux hooks\n  const { simiPlaylist } = useAppSelector(\n    (state) => ({\n      simiPlaylist: state.player.simiPlaylist\n      // currentId: state.player.currentSongD.id\n    }),\n    shallowEqualApp\n  )\n  const dispatch = useAppDispatch()\n  const location = useLocation()\n  const currentId = location.state.currentSong.id\n  // other hooks\n  useEffect(() => {\n    if (currentId !== null) dispatch(getSimiSongAction(currentId))\n    console.log(currentId)\n  }, [currentId])\n\n  return (\n    <PlayerSongsWrapper>\n      <HYThemeHeaderPlayer title=\"包含这首歌的歌单\" />\n      <div className=\"songs\">\n        {simiPlaylist.map((item) => {\n          return (\n            <div className=\"song-item\" key={item.id}>\n              <a className=\"image\" href=\"/#\">\n                <img src={getImageSize(item.coverImgUrl, 50)} alt=\"\" />\n              </a>\n              <div className=\"info text-nowrap\">\n                <a href=\"#/\" className=\"name\">\n                  {item.name}\n                </a>\n                <div className=\"auchor\">\n                  by\n                  <a href=\"#/\" className=\"nickname\">\n                    {item.creator.nickname}\n                  </a>\n                </div>\n              </div>\n            </div>\n          )\n        })}\n      </div>\n    </PlayerSongsWrapper>\n  )\n}\n\nexport default memo(HYPlayerSongs)\n","import styled from 'styled-components'\n\nexport const RelevantWrapper = styled.div`\n  margin-top: 40px;\n\n  .songs {\n    .song-item {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      margin-bottom: 12px;\n\n      .info {\n        .title {\n          a {\n            color: #666;\n          }\n        }\n\n        .artist {\n          a {\n            color: #999;\n          }\n        }\n      }\n\n      .operate {\n        .item {\n          display: inline-block;\n          width: 10px;\n          height: 11px;\n        }\n\n        .play {\n          background-position: -69px -455px;\n          margin-right: 10px;\n        }\n\n        .add {\n          background-position: -87px -454px;\n        }\n      }\n    }\n  }\n`\n","import React, { memo, useEffect } from 'react'\n\nimport type { FC, ReactNode } from 'react'\nimport { shallowEqualApp, useAppSelector, useAppDispatch } from '@/store'\n\nimport { getSimiSongAction } from '../../store/player'\n\nimport HYThemeHeaderPlayer from '@/components/theme-header-player'\nimport { RelevantWrapper } from './style'\nimport { useLocation } from 'react-router-dom'\n\ninterface IProps {\n  children?: ReactNode\n  id?: number\n}\n\nconst HYRelevant: FC<IProps> = () => {\n  // const { id } = props\n\n  const { simiSongs } = useAppSelector(\n    (state) => ({\n      simiSongs: state.player.simiSongs\n      // currentId: state.player.currentSongD.id\n    }),\n    shallowEqualApp\n  )\n  const dispatch = useAppDispatch()\n  const location = useLocation()\n  const currentId = location.state.currentSong.id\n  useEffect(() => {\n    if (currentId !== null) dispatch(getSimiSongAction(currentId))\n  }, [currentId])\n\n  return (\n    <RelevantWrapper>\n      <HYThemeHeaderPlayer title=\"相似歌曲\" />\n      <div className=\"songs\">\n        {simiSongs.map((item) => {\n          return (\n            <div className=\"song-item\" key={item.id}>\n              <div className=\"info\">\n                <div className=\"title\">\n                  <a href=\"#/\">{item.name}</a>\n                </div>\n                <div className=\"artist\">\n                  <a href=\"#/\">{item.artists[0].name}</a>\n                </div>\n              </div>\n              <div className=\"operate\">\n                <button className=\"item sprite_icon3 play\"></button>\n                <button className=\"item sprite_icon3 add\"></button>\n              </div>\n            </div>\n          )\n        })}\n      </div>\n    </RelevantWrapper>\n  )\n}\n\nexport default memo(HYRelevant)\n","import React, { memo, useEffect } from 'react'\nimport type { FC, ReactNode } from 'react'\nimport { PlayerLeft, PlayerRight, PlayerWrapper } from './style'\nimport { shallowEqualApp, useAppDispatch, useAppSelector } from '@/store'\n\nimport HYPlayerInfo from './c-cpns/player-info'\nimport HYPlayerComment from './c-cpns/player-comment'\nimport HYPlayerSongs from './c-cpns/player-songs'\nimport HYPlayerRelevant from './c-cpns/player-relevant'\nimport { useLocation } from 'react-router-dom'\nimport { getDetailSongAction, getSimiSongAction } from './store/player'\ninterface IProps {\n  children?: ReactNode\n}\n\nconst Player: FC<IProps> = () => {\n  // const dispatch = useAppDispatch()\n  // const location = useLocation()\n  // hooks\n  // useEffect(() => {\n  //   console.log('index')\n  //   dispatch(getSimiSongAction(location.state.currentSong.id))\n  //   dispatch(getDetailSongAction(location.state.currentSong.id))\n  // }, [dispatch])\n  return (\n    <PlayerWrapper>\n      <div className=\"content wrap-v2\">\n        <PlayerLeft>\n          <HYPlayerInfo />\n          <HYPlayerComment />\n        </PlayerLeft>\n        <PlayerRight>\n          <HYPlayerSongs />\n          <HYPlayerRelevant />\n        </PlayerRight>\n      </div>\n    </PlayerWrapper>\n  )\n}\n\nexport default memo(Player)\n"],"names":["OperationBarWrapper","styled","HYSongOperationBar","props","favorTitle","shareTitle","downloadTitle","commentTitle","id","dispatch","useAppDispatch","className","onClick","fetchCurrentSongAction","href","memo","PlayerWrapper","require","PlayerLeft","PlayerRight","InfoWrapper","InfoLeft","InfoRight","isSpread","HYPlayerInfo","useState","setIsSpread","location","useLocation","currentLyrics","useAppSelector","state","player","lyricsD","shallowEqualApp","totalLyricCount","length","useEffect","getDetailSongAction","currentSong","console","log","src","formatUtils","al","picUrl","alt","name","ar","slice","map","item","text","time","HYPlayerComment","HeaderWrapper","HYThemeHeaderPlayer","title","PlayerSongsWrapper","HYPlayerSongs","simiPlaylist","currentId","getSimiSongAction","getImageSize","coverImgUrl","creator","nickname","RelevantWrapper","HYRelevant","simiSongs","artists","Player"],"sourceRoot":""}