{"version":3,"file":"static/js/570.f3900f62.chunk.js","mappings":"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","sources":["components/song-operation-bar/style.ts","components/song-operation-bar/index.tsx","views/discover/c-views/ranking/c-cpns/top-ranking/style.ts","views/discover/c-views/ranking/c-cpns/top-ranking/index.tsx","views/discover/c-views/ranking/c-cpns/ranking-header/style.ts","views/discover/c-views/ranking/c-cpns/ranking-header/index.tsx","components/theme-header-song/style.ts","components/theme-header-song/index.tsx","views/discover/c-views/ranking/c-cpns/ranking-list/style.ts","views/discover/c-views/ranking/c-cpns/ranking-list/index.tsx","views/discover/c-views/ranking/style.ts","views/discover/c-views/ranking/index.tsx"],"sourcesContent":["import styled from 'styled-components'\n\nexport const OperationBarWrapper = styled.div`\n  display: flex;\n  align-items: center;\n\n  .play {\n    display: flex;\n    align-items: center;\n    margin-right: 5px;\n\n    .play-icon {\n      display: inline-block;\n      height: 31px;\n      line-height: 31px;\n      background-position: right -428px;\n\n      .play {\n        color: #fff;\n        display: flex;\n        align-items: center;\n        padding: 0 7px 0 8px;\n        background-position: 0 -387px;\n\n        i {\n          display: inline-block;\n          width: 20px;\n          height: 18px;\n          margin: -2px 2px 0;\n          background-position: 0 -1622px;\n        }\n      }\n      :hover {\n        background-position: right -510px;\n      }\n    }\n\n    .add-icon {\n      display: inline-block;\n      width: 31px;\n      height: 31px;\n      margin-left: -3px;\n      padding-right: 0;\n      background-position: 0 -1588px;\n      text-indent: -9999px;\n    }\n  }\n\n  .item {\n    display: inline-block;\n    height: 31px;\n    margin-right: 6px;\n    padding-right: 5px;\n    background-position: right -1020px;\n    .icon {\n      display: inline-block;\n      height: 31px;\n      line-height: 31px;\n      padding: 0 7px 0 28px;\n      font-family: simsun;\n    }\n\n    .favor-icon {\n      background-position: 0 -977px;\n    }\n\n    .share-icon {\n      background-position: 0 -1225px;\n    }\n\n    .download-icon {\n      background-position: 0 -2761px;\n    }\n\n    .comment-icon {\n      background-position: 0 -1465px;\n    }\n  }\n`\n","import React, { memo } from 'react'\nimport type { FC, ReactNode } from 'react'\nimport { OperationBarWrapper } from './style'\nimport { useAppDispatch } from '@/store'\nimport { fetchCurrentSongAction } from '@/views/player/store/player'\n\ninterface IProps {\n  children?: ReactNode\n  favorTitle: any\n  shareTitle: any\n  downloadTitle: any\n  commentTitle: any\n  id: number\n}\n\nconst HYSongOperationBar: FC<IProps> = (props) => {\n  const { favorTitle, shareTitle, downloadTitle, commentTitle, id } = props\n  // const { currentSong } = useAppSelector(\n  //   (state) => ({\n  //     currentSong: state.player.currentSong\n  //   }),\n  //   shallowEqualApp\n  // )\n  const dispatch = useAppDispatch()\n\n  function play() {\n    dispatch(fetchCurrentSongAction(id))\n  }\n  return (\n    <OperationBarWrapper>\n      <span className=\"play\">\n        <a className=\"play-icon sprite_button\" onClick={() => play()}>\n          <span className=\"play sprite_button\">\n            <i className=\"sprite_button\"></i>\n            <span>播放</span>\n          </span>\n        </a>\n        <a href=\"/abc\" className=\"add-icon sprite_button\">\n          +\n        </a>\n      </span>\n      <a href=\"/abc\" className=\"item sprite_button\">\n        <i className=\"icon favor-icon sprite_button\">{favorTitle}</i>\n      </a>\n      <a href=\"/abc\" className=\"item sprite_button\">\n        <i className=\"icon share-icon sprite_button\">{shareTitle}</i>\n      </a>\n      <a href=\"/abc\" className=\"item sprite_button\">\n        <i className=\"icon download-icon sprite_button\">{downloadTitle}</i>\n      </a>\n      <a href=\"/abc\" className=\"item sprite_button\">\n        <i className=\"icon comment-icon sprite_button\">{commentTitle}</i>\n      </a>\n    </OperationBarWrapper>\n  )\n}\n\nexport default memo(HYSongOperationBar)\n","import styled from 'styled-components'\n\nexport const TopRankingWrapper = styled.div`\n  padding: 25px 0;\n\n  .header {\n    padding: 12px 12px 10px;\n    font-size: 14px;\n    color: #000;\n    font-family: simsun;\n  }\n\n  .item {\n    height: 62px;\n    padding-left: 20px;\n    display: flex;\n    align-items: center;\n    cursor: pointer;\n\n    &:hover,\n    &.active {\n      background-color: #e6e6e6;\n    }\n\n    img {\n      width: 40px;\n      height: 40px;\n    }\n\n    .info {\n      margin-left: 10px;\n\n      .name {\n        color: #000;\n      }\n\n      .update {\n        margin-top: 5px;\n        color: #999;\n      }\n    }\n  }\n`\n","import React, { useEffect, memo } from 'react'\nimport classNames from 'classnames'\nimport { shallowEqualApp, useAppSelector, useAppDispatch } from '@/store'\nimport { getImageSize } from '@/utils/format'\nimport { changeCurrentIndex, getRanking } from '../../store/ranking'\n\nimport { TopRankingWrapper } from './style'\n\nexport default memo(function HYTopRanking() {\n  // redux\n  const { topList, currentIndex } = useAppSelector(\n    (state) => ({\n      topList: state.ranking.topList,\n      currentIndex: state.ranking.currentIndex\n    }),\n    shallowEqualApp\n  )\n  const dispatch = useAppDispatch()\n\n  // hooks\n  useEffect(() => {\n    const id = topList[currentIndex] && topList[currentIndex].id\n    if (!id) return\n    dispatch(getRanking(id))\n  }, [topList, dispatch, currentIndex])\n\n  // handle function\n  const hanldeItemClick = (index: number) => {\n    dispatch(changeCurrentIndex(index))\n    const id = topList[currentIndex].id\n    dispatch(getRanking(id))\n  }\n\n  return (\n    <TopRankingWrapper>\n      {topList.map((item, index) => {\n        let header\n        if (index === 0 || index === 4) {\n          header = (\n            <div className=\"header\">\n              {index === 0 ? '云音乐特色榜' : '全球媒体榜'}\n            </div>\n          )\n        }\n        return (\n          <div key={item.id}>\n            {header}\n            <div\n              className={classNames('item', { active: index === currentIndex })}\n              onClick={() => hanldeItemClick(index)}\n            >\n              <img src={getImageSize(item.coverImgUrl, 40)} alt=\"\" />\n              <div className=\"info\">\n                <div className=\"name\">{item.name}</div>\n                <div className=\"update\">{item.updateFrequency}</div>\n              </div>\n            </div>\n          </div>\n        )\n      })}\n    </TopRankingWrapper>\n  )\n})\n","import styled from 'styled-components'\n\nexport const RankingHeaderWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 40px;\n\n  .image {\n    padding: 3px;\n    border: 1px solid #ccc;\n    position: relative;\n    img {\n      width: 150px;\n      height: 150px;\n    }\n\n    .image_cover {\n      background-position: -230px -380px;\n    }\n  }\n\n  .info {\n    margin-left: 30px;\n    .title {\n      color: #333;\n      font-size: 20px;\n      font-family: 'Microsoft Yahei', Arial, Helvetica, sans-serif;\n    }\n\n    .time {\n      display: flex;\n      align-items: center;\n      color: #666;\n      margin: 8px 0 30px;\n\n      .clock {\n        display: inline-block;\n        width: 13px;\n        height: 13px;\n        background-position: -18px -682px;\n        position: relative;\n        top: -2px;\n        margin-right: 3px;\n      }\n\n      .update-f {\n        color: #999;\n      }\n    }\n  }\n`\n","import React, { memo } from 'react'\nimport { shallowEqualApp, useAppSelector } from '@/store'\nimport { formatMonthDay } from '@/utils/format'\n\nimport HYSongOperationBar from '@/components/song-operation-bar'\nimport { RankingHeaderWrapper } from './style'\n\nexport default memo(function HYRankingHeader() {\n  // redux\n  const { playList } = useAppSelector(\n    (state) => ({\n      playList: state.ranking.playList\n    }),\n    shallowEqualApp\n  )\n\n  return (\n    <RankingHeaderWrapper>\n      <div className=\"image\">\n        <img src={playList.coverImgUrl} alt=\"\" />\n        <span className=\"image_cover\">封面</span>\n      </div>\n      <div className=\"info\">\n        <div className=\"title\">{playList.name}</div>\n        <div className=\"time\">\n          <i className=\"clock sprite_icon2\"></i>\n          <div>最近更新：{formatMonthDay(playList.updateTime)}</div>\n          <div className=\"update-f\">（{'每日更新:TODO'}）</div>\n        </div>\n        <HYSongOperationBar\n          favorTitle={`(${playList.subscribedCount})`}\n          shareTitle={`(${playList.shareCount})`}\n          downloadTitle=\"下载\"\n          commentTitle={`(${playList.commentCount})`}\n          id={0}\n        />\n      </div>\n    </RankingHeaderWrapper>\n  )\n})\n","import styled from 'styled-components'\n\nexport const HeaderWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding-bottom: 5px;\n  border-bottom: 2px solid #c20c0c;\n\n  .left {\n    display: flex;\n    align-items: flex-end;\n\n    .title {\n      font-size: 20px;\n      font-family: 'Microsoft Yahei', Arial, Helvetica, sans-serif;\n    }\n\n    .count {\n      margin-bottom: 5px;\n      margin-left: 20px;\n    }\n  }\n\n  .right {\n    .count {\n      color: #c20c0c;\n    }\n  }\n`\n","import React from 'react'\nimport { shallowEqualApp, useAppSelector } from '@/store'\n\nimport { HeaderWrapper } from './style'\nimport { memo } from 'react'\n\nexport default memo(function HYThemeHeaderSong() {\n  // redux\n  const state = useAppSelector(\n    (state) => ({\n      playList: state.ranking.playList\n    }),\n    shallowEqualApp\n  )\n\n  return (\n    <HeaderWrapper>\n      <div className=\"left\">\n        <h3 className=\"title\">歌曲列表</h3>\n        <div className=\"count\">{state.playList.trackCount}首歌</div>\n      </div>\n      <div className=\"right\">\n        <span>播放：</span>\n        <span className=\"count\">{state.playList.playCount}</span>\n        <span>次</span>\n      </div>\n    </HeaderWrapper>\n  )\n})\n","import styled from 'styled-components'\n\nexport const RankingListWrapper = styled.div`\n  padding: 0 40px;\n\n  .play-list {\n    table {\n      width: 100%;\n      border: 1px solid #d9d9d9;\n\n      thead {\n        th {\n          height: 34px;\n          line-height: 34px;\n          background-image: url(${require('@/assets/img/sprite_table.png')});\n          color: #666;\n          border: 1px solid #ddd;\n          border-width: 0 0 1px 1px;\n          padding-left: 10px;\n        }\n\n        .ranking {\n          width: 78px;\n          border-left: none;\n        }\n\n        .duration {\n          width: 91px;\n        }\n\n        .singer {\n          width: 173px;\n        }\n      }\n\n      tbody {\n        td {\n          padding: 6px 10px;\n        }\n\n        tr:nth-child(2n) {\n          background-color: #fff;\n        }\n\n        tr:nth-child(2n + 1) {\n          background-color: #f7f7f7;\n        }\n\n        .rank-num {\n          display: flex;\n\n          .num {\n            width: 25px;\n            height: 18px;\n            text-align: center;\n            color: #999;\n          }\n\n          .new {\n            width: 16px;\n            height: 17px;\n            margin-left: 12px;\n            background-position: -67px -283px;\n          }\n        }\n\n        .song-name {\n          display: flex;\n          align-items: center;\n          img {\n            width: 50px;\n            height: 50px;\n            margin-right: 10px;\n          }\n\n          .play {\n            width: 17px;\n            height: 17px;\n            background-position: 0 -103px;\n            :hover {\n              background-position: 0 -128px;\n            }\n            :active {\n              background-position: -20 -128px;\n            }\n          }\n\n          .name {\n            margin-left: 10px;\n          }\n        }\n      }\n    }\n  }\n`\n","import React, { memo } from 'react'\nimport type { FC, ReactNode } from 'react'\n\nimport { shallowEqualApp, useAppDispatch, useAppSelector } from '@/store'\nimport { getImageSize, formatMinuteSecond } from '@/utils/format'\n\nimport HYThemeHeaderSong from '@/components/theme-header-song'\nimport { RankingListWrapper } from './style'\nimport { useNavigate } from 'react-router-dom'\nimport { fetchCurrentSongAction } from '@/views/player/store/player'\n\ninterface IProps {\n  children?: ReactNode\n}\n\nconst HYRankingList: FC<IProps> = () => {\n  const navigate = useNavigate()\n  const dispatch = useAppDispatch()\n  const state = useAppSelector(\n    (state) => ({\n      playList: state.ranking.playList\n    }),\n    shallowEqualApp\n  )\n  const tracks: any[] = state.playList.tracks || []\n\n  function detail(item: any) {\n    navigate('/discover/player', { state: { currentSong: item } })\n  }\n\n  function handlePlayClick(id: number) {\n    dispatch(fetchCurrentSongAction(id))\n  }\n\n  return (\n    <RankingListWrapper>\n      <HYThemeHeaderSong />\n      <div className=\"play-list\">\n        <table>\n          <thead>\n            <tr className=\"header\">\n              <th className=\"ranking\"></th>\n              <th className=\"title\">标题</th>\n              <th className=\"duration\">时长</th>\n              <th className=\"singer\">歌手</th>\n            </tr>\n          </thead>\n          <tbody>\n            {tracks.map((item, index) => {\n              return (\n                <tr className=\"\" key={item.id}>\n                  <td>\n                    <div className=\"rank-num\">\n                      <span className=\"num\">{index + 1}</span>\n                      <span className=\"new sprite_icon2\"></span>\n                    </div>\n                  </td>\n                  <td>\n                    <div className=\"song-name\">\n                      <a>\n                        {index < 3 ? (\n                          <img\n                            src={getImageSize(item.al.picUrl, 50)}\n                            alt=\"\"\n                            onClick={() => detail(item)}\n                          />\n                        ) : null}\n                      </a>\n                      <a\n                        className=\"play sprite_table\"\n                        onClick={() => handlePlayClick(item.id)}\n                      ></a>\n                      <a className=\"name\" onClick={() => detail(item)}>\n                        {item.name}\n                      </a>\n                    </div>\n                  </td>\n                  <td>{formatMinuteSecond(item.dt)}</td>\n                  <td>{item.ar[0].name}</td>\n                </tr>\n              )\n            })}\n          </tbody>\n        </table>\n      </div>\n    </RankingListWrapper>\n  )\n}\n\nexport default memo(HYRankingList)\n","import styled from 'styled-components'\n\nexport const RankingWrapper = styled.div`\n  display: flex;\n`\n\nexport const RankingLeft = styled.div`\n  width: 240px;\n  border: 1px solid #d3d3d3;\n  border-width: 0 1px;\n`\n\nexport const RankingRight = styled.div`\n  width: 740px;\n  border-right: 1px solid #d3d3d3;\n  background-color: #fafafa;\n`\n","import type { FC, ReactNode } from 'react'\nimport React, { useEffect, memo } from 'react'\nimport { shallowEqualApp, useAppDispatch, useAppSelector } from '@/store'\nimport { useLocation } from 'react-router-dom'\nimport { changeCurrentIndex, getTops } from './store/ranking'\n\nimport HYTopRanking from './c-cpns/top-ranking'\nimport HYRankingHeader from './c-cpns/ranking-header'\nimport HYRankingList from './c-cpns/ranking-list'\nimport { RankingWrapper, RankingLeft, RankingRight } from './style'\n\ninterface IProps {\n  children?: ReactNode\n}\n\nconst Ranking: FC<IProps> = () => {\n  // redux\n  const dispatch = useAppDispatch()\n  const location = useLocation()\n  // hooks\n  useEffect(() => {\n    console.log(location)\n    dispatch(getTops())\n    if (location.state !== null) dispatch(changeCurrentIndex(location.state.id))\n  }, [dispatch])\n\n  return (\n    <RankingWrapper className=\"wrap-v2\">\n      <RankingLeft>\n        <HYTopRanking />\n      </RankingLeft>\n      <RankingRight>\n        <HYRankingHeader />\n        <HYRankingList />\n      </RankingRight>\n    </RankingWrapper>\n  )\n}\n\nexport default memo(Ranking)\n"],"names":["OperationBarWrapper","styled","HYSongOperationBar","props","favorTitle","shareTitle","downloadTitle","commentTitle","id","dispatch","useAppDispatch","className","onClick","fetchCurrentSongAction","href","memo","TopRankingWrapper","useAppSelector","state","topList","ranking","currentIndex","shallowEqualApp","useEffect","getRanking","map","item","index","header","classNames","active","changeCurrentIndex","hanldeItemClick","src","getImageSize","coverImgUrl","alt","name","updateFrequency","RankingHeaderWrapper","playList","formatMonthDay","updateTime","subscribedCount","shareCount","commentCount","HeaderWrapper","trackCount","playCount","RankingListWrapper","require","HYRankingList","navigate","useNavigate","tracks","detail","currentSong","al","picUrl","formatMinuteSecond","dt","ar","RankingWrapper","RankingLeft","RankingRight","Ranking","location","useLocation","console","log","getTops"],"sourceRoot":""}